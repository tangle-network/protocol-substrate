name: check

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: git

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  ci:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Define a matrix for parallelizing the Check Format, Check Build, and Test steps
    strategy:
      matrix:
        step: ["format", "build", "test"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set-Up
        run: sudo apt install -y cmake pkg-config libssl-dev git build-essential clang libclang-dev curl protobuf-compiler

      - name: Setup DVC
        uses: iterative/setup-dvc@v1

      - name: Fetch Fixtures
        run: ./scripts/fetch-fixtures.sh

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly

      - name: Install cargo-nextest
        uses: baptiste0928/cargo-install@v1
        with:
          crate: cargo-nextest
          version: latest
          args: "-Z sparse-registry"

      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target
            target/debug
            target/release
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # Run the specified step in parallel with different parameters
      - name: ${{ matrix.step }}
        run: |
          SKIP_WASM_BUILD=1 cargo ${{
            matrix.step == "format" && "fmt --all -- --check" ||
            matrix.step == "build" && "check --release -Z sparse-registry" ||
            matrix.step == "test" && "nextest run --release -Z sparse-registry --workspace --exclude webb-client"
          }}

        # Use a unique directory for each matrix element to avoid conflicts
        working-directory: ${{ matrix.step }}
