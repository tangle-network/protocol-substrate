//! Autogenerated weights for `pallet_anchor`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2021-11-05, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 128

// Executed Command:
// ./target/release/darkwebb-standalone-node
// benchmark
// --chain=dev
// --execution
// wasm
// --wasm-execution
// compiled
// --pallet
// pallet_anchor
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --raw
// --output
// ./pallets/anchor/src/weights.rs


#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_anchor`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_anchor::WeightInfo for WeightInfo<T> {
	// Storage: MerkleTree NextTreeId (r:1 w:1)
	// Storage: MerkleTree DefaultHashes (r:1 w:0)
	// Storage: MerkleTree Trees (r:0 w:1)
	// Storage: Anchor Anchors (r:0 w:1)
	// Storage: LinkableTree MaxEdges (r:0 w:1)
	fn create(_i: u32, d: u32, ) -> Weight {
		(55_975_000 as Weight)
			// Standard Error: 36_000
			.saturating_add((217_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: MerkleTree Trees (r:1 w:1)
	// Storage: MerkleTree DefaultHashes (r:1 w:0)
	// Storage: BN254CircomPoseidon3x5Hasher Parameters (r:1 w:0)
	// Storage: MerkleTree NextRootIndex (r:1 w:1)
	// Storage: MerkleTree NextLeafIndex (r:1 w:1)
	// Storage: Anchor Anchors (r:1 w:0)
	// Storage: System Account (r:1 w:1)
	// Storage: MerkleTree Leaves (r:0 w:1)
	// Storage: MerkleTree CachedRoots (r:0 w:1)
	fn deposit() -> Weight {
		(10_971_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(7 as Weight))
			.saturating_add(T::DbWeight::get().writes(6 as Weight))
	}
	// Storage: LinkableTree MaxEdges (r:1 w:0)
	// Storage: MerkleTree Trees (r:1 w:0)
	// Storage: MerkleTree CachedRoots (r:1 w:0)
	// Storage: LinkableTree EdgeList (r:1 w:0)
	// Storage: Anchor NullifierHashes (r:1 w:1)
	// Storage: AnchorVerifier Parameters (r:1 w:0)
	// Storage: Anchor Anchors (r:1 w:0)
	// Storage: System Account (r:1 w:1)
	fn withdraw() -> Weight {
		(47_849_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(8 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
}
