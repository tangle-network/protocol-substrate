//! Autogenerated weights for `pallet_hasher`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2021-10-12, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 128

// Executed Command:
// ./target/release/darkwebb-standalone-node
// benchmark
// --chain
// dev
// --execution
// wasm
// --wasm-execution
// compiled
// --pallet=*
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --raw
// --output
// ./pallets/hasher/weights.rs


#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

pub trait WeightInfo {
	fn set_parameters(c: u32) -> Weight;
	fn set_maintainer() -> Weight;
	fn force_set_parameters(c: u32) -> Weight;
	fn force_set_maintainer() -> Weight;
}

/// Weight functions for `pallet_hasher`.
pub struct WebbWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for WebbWeight<T> {
	// Storage: BN254Poseidon3x5Hasher Maintainer (r:1 w:0)
	// Storage: BN254Poseidon3x5Hasher Deposit (r:1 w:0)
	// Storage: BN254Poseidon3x5Hasher Parameters (r:1 w:1)
	fn set_parameters(c: u32, ) -> Weight {
		(280_652_000 as Weight)
			// Standard Error: 0
			.saturating_add((2_000 as Weight).saturating_mul(c as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: BN254Poseidon3x5Hasher Maintainer (r:1 w:1)
	fn set_maintainer() -> Weight {
		(40_643_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: BN254Poseidon3x5Hasher Deposit (r:1 w:1)
	// Storage: System Account (r:1 w:0)
	// Storage: BN254Poseidon3x5Hasher Parameters (r:1 w:1)
	fn force_set_parameters(c: u32, ) -> Weight {
		(125_289_000 as Weight)
			// Standard Error: 0
			.saturating_add((6_000 as Weight).saturating_mul(c as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: BN254Poseidon3x5Hasher Maintainer (r:1 w:1)
	fn force_set_maintainer() -> Weight {
		(64_507_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
}


#[allow(unused_variables)]
impl WeightInfo for () {
    fn set_parameters(c: u32) -> Weight {
        0
    }

    fn set_maintainer() -> Weight {
        0
    }

    fn force_set_parameters(c: u32) -> Weight {
        0
    }

    fn force_set_maintainer() -> Weight {
        0
    }
}